# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the OneESPT template
# If you are not using the MSSecurity shared hosted pool with MSSecurity-1ES-Windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - .azure-cd-tier-one-myevent-indexer-functions.yml
    - jobs/*
    - scripts/*
    - functions/Intergen.EventTools.SubscriberFunctions/*
    - src/Intergen.EventTools.Core/*
    - src/MSCorp.EventTools.EventSpecific.Core/*
    - src/MSCorp.EventTools.Providers.EventCore.PDC/*
    - src/MSCorp.EventTools.Providers.EventPoint/*
    - src/MSCorp.EventTools.Providers.MicrosoftBookings/*
    - src/MSCorp.Ignite.Common/*
    - src/MSCorp.Ignite.Core/*
    - src/MSCorp.Ignite.Domain/*
variables:
- group: MyEventPlatform-Program
- name: buildConfiguration
  value: 'Release'
- name: mooncake.insights-key-var-name
  value: 'mooncake.insights-key'
- name: insights-key-var-name
  value: 'insights-key'
- name: AZURE_CLIENT_ID
  value: ''
- name: AZURE_CLIENT_SECRET
  value: ''
- name: AZURE_TENANT_ID
  value: ''
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: MSSecurity-1ES-Build-Agents-Pool
      image: MSSecurity-1ES-Windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling-BulkMigrated
    stages:
    - stage: Build
      displayName: Build
      jobs:
      - job: 
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: drop'
        steps:
        - script: dotnet clean functions/Intergen.EventTools.Functions.sln
          displayName: 'dotnet clean'
        - task: NuGetAuthenticate@1
        - script: dotnet restore functions/Intergen.EventTools.Functions.sln
          displayName: 'dotnet restore'
        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/Intergen.EventTools.AttendeeProcessor.Functions.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true
        - task: CopyFiles@2
          displayName: 'Write scripts from /src to artifacts'
          inputs:
            SourceFolder: $(System.DefaultWorkingDirectory)/src
            Contents: |
              *.ps1
              *.sh
              *.bicep
            TargetFolder: '$(Build.ArtifactStagingDirectory)/scripts'
        - task: CopyFiles@2
          displayName: Write scripts to artifacts
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/scripts'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/scripts'
            OverWrite: true
        - task: CopyFiles@2
          displayName: Write templates to artifacts
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/functions/Intergen.EventTools.SubscriberFunctions/Deploy'
            Contents: |
              *.json
              *.bicep
            TargetFolder: '$(Build.ArtifactStagingDirectory)/templates'
            OverWrite: true
    - stage: release_staging_reciever
      displayName: Release Staging Attendee Indexer
      dependsOn: Build
      variables:
      - group: MyEventPlatform-Env-CONT
      jobs:
      - deployment: deploy_cont_indexer
        displayName: Deploy cont indexer
        environment: myevent-platform-cont
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /jobs/.azure-deploy-indexer-function-app.yml@self
                parameters:
                  azure_subscription: $(azure-subscription)
                  azure_tenant_subscription_id: $(azure-tenant-subscription-id)
                  resource_group: $(resource-group)
                  resource_group_location: $(resource-group-location)
                  event_name: $(eventName)
                  env: $(environment)
                  servicebus_resource_group: $(service-bus-resource-group)
                  servicebus_namespace: $(eventAttendeeServiceBusNamespace)
                  servicebus_topic: $(eventAttendeeServiceBusTopic-test)
                  servicebus_sessionchange_topic: $(eventSessionChangeTopic)
                  servicebus_connection: $(AttendeeIndexingServiceBusConnection)
                  site_name: $(site-name)
                  program_index_prefix: $(ProgramIndexPrefix)
                  index_prefix: $(IndexPrefix)
                  city_name: $(CITY)
                  region: $(resource-group-location)
                  session_speaker_queue: $(SessionSpeakerQueue)
                  public_search_service_name: $(search-name)
                  public_search_index_api_key: $(search-service-admin-key)
                  db_settings_database_name: $(cosmosDBName)
                  db_settings_store_name: $(DbSettingsStoreName)
                  db_settings_timeout_in_seconds: $(DbSettingsTimeoutInSeconds)
                  db_settings_file_name: $(defaultSettingsFile)
                  is_using_test_data: $(appsetting.IsUsingTestData)
                  event_key_vault: '$(EVENT_KEY_VAULT)'
                  devOpsOrg: $(devOpsOrg)
                  devOpsProject: $(devOpsProject)
                  varGroupId: $(varGroupId)
                  region_abbr: $(resource-group-location-abbr)
                  azure_cloud_service_connection: $(azure-service-connection)
                  log_analytics_sku: $(log-analytics-sku)
                  insights_key_var_name: $(insights-key-var-name)
                  azure_client_id: $(AZURE_CLIENT_ID)
                  azure_client_secret: $(AZURE_CLIENT_SECRET)
                  azure_tenant_id: $(AZURE_TENANT_ID)
                  cosmos_regions_priority: $(cosmos_regions_priority)
                  company_indexer_disabled: $(companyIndexerDisabled)
                  session_speaker_indexer_disabled: $(sessionSpeakerIndexerDisabled)
                  attendee_indexer_disabled: $(attendeeIndexerDisabled)
    - stage: release_uat_reciever
      displayName: Release UAT Attendee Indexer
      dependsOn: Build
      variables:
      - group: MyEventPlatform-Env-UAT
      jobs:
      - deployment: deploy_uat_indexer
        displayName: Deploy uat indexer
        environment: myevent-platform-uat
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /jobs/.azure-deploy-indexer-function-app.yml@self
                parameters:
                  azure_subscription: $(azure-subscription)
                  azure_tenant_subscription_id: $(azure-tenant-subscription-id)
                  resource_group: $(resource-group)
                  resource_group_location: $(resource-group-location)
                  event_name: $(eventName)
                  env: $(environment)
                  servicebus_resource_group: $(service-bus-resource-group)
                  servicebus_namespace: $(eventAttendeeServiceBusNamespace)
                  servicebus_topic: $(eventAttendeeServiceBusTopic)
                  servicebus_sessionchange_topic: $(eventSessionChangeTopic)
                  servicebus_connection: $(AttendeeIndexingServiceBusConnection)
                  site_name: $(site-name)
                  program_index_prefix: $(ProgramIndexPrefix)
                  index_prefix: $(IndexPrefix)
                  city_name: $(CITY)
                  region: $(resource-group-location)
                  session_speaker_queue: $(SessionSpeakerQueue)
                  public_search_service_name: $(search-name)
                  public_search_index_api_key: $(search-service-admin-key)
                  db_settings_database_name: $(cosmosDBName)
                  db_settings_store_name: $(DbSettingsStoreName)
                  db_settings_timeout_in_seconds: $(DbSettingsTimeoutInSeconds)
                  db_settings_file_name: $(defaultSettingsFile)
                  is_using_test_data: false
                  event_key_vault: '$(EVENT_KEY_VAULT)'
                  devOpsOrg: $(devOpsOrg)
                  devOpsProject: $(devOpsProject)
                  varGroupId: $(varGroupId)
                  region_abbr: $(resource-group-location-abbr)
                  azure_cloud_service_connection: $(azure-service-connection)
                  log_analytics_sku: $(log-analytics-sku)
                  insights_key_var_name: $(insights-key-var-name)
                  azure_client_id: $(AZURE_CLIENT_ID)
                  azure_client_secret: $(AZURE_CLIENT_SECRET)
                  azure_tenant_id: $(AZURE_TENANT_ID)
                  cosmos_regions_priority: $(cosmos_regions_priority)
                  company_indexer_disabled: $(companyIndexerDisabled)
                  session_speaker_indexer_disabled: $(sessionSpeakerIndexerDisabled)
                  attendee_indexer_disabled: $(attendeeIndexerDisabled)
    - stage: release_uat_reciever_mooncake
      displayName: MC_Release UAT Attendee Indexer
      dependsOn: Build
      variables:
      - group: MyEventPlatform-Env-UAT
      - name: AZURE_CLIENT_ID
        value: $(mc-sp-azure-client-id)
      - name: AZURE_CLIENT_SECRET
        value: $(mc-sp-azure-client-secret)
      - name: AZURE_TENANT_ID
        value: $(mc-sp-azure-TENANT-id)
      - name: search-name
        value: $(events-testing-chinaeast2)
      - name: search-service-admin-key
        value: $(events-testing-chinaeast2-key)
      jobs:
      - deployment: deploy_uat_indexer
        displayName: Deploy uat indexer
        environment: myevent-platform-uat
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /jobs/.azure-deploy-indexer-function-app.yml@self
                parameters:
                  azure_subscription: $(mooncake.azure-subscription)
                  azure_subscription_global: $(azure-subscription)
                  azure_tenant_subscription_id: $(mooncake.azure-tenant-subscription-id)
                  resource_group: $(resource-group)
                  resource_group_location: $(mooncake.resource-group-location)
                  event_name: $(eventName)
                  env: $(environment)
                  servicebus_resource_group: $(service-bus-resource-group)
                  servicebus_namespace: $(eventAttendeeServiceBusNamespace)
                  servicebus_topic: $(eventAttendeeServiceBusTopic)
                  servicebus_sessionchange_topic: $(eventSessionChangeTopic)
                  servicebus_connection: $(AttendeeIndexingServiceBusConnection)
                  site_name: $(site-name)
                  program_index_prefix: $(ProgramIndexPrefix)
                  index_prefix: $(IndexPrefix)
                  city_name: $(CITY)
                  region: $(mooncake.resource-group-location)
                  session_speaker_queue: $(SessionSpeakerQueue)
                  public_search_service_name: $(search-name)
                  public_search_index_api_key: $(search-service-admin-key)
                  db_settings_database_name: $(cosmosDBName)
                  db_settings_store_name: $(DbSettingsStoreName)
                  db_settings_timeout_in_seconds: $(DbSettingsTimeoutInSeconds)
                  db_settings_file_name: $(defaultSettingsFile)
                  is_using_test_data: false
                  event_key_vault: '$(EVENT_KEY_VAULT)'
                  devOpsOrg: $(devOpsOrg)
                  devOpsProject: $(devOpsProject)
                  varGroupId: $(varGroupId)
                  region_abbr: $(mooncake.resource-group-location-abbr)
                  azure_cloud_service_connection: $(azure-service-connection)
                  log_analytics_sku: $(mooncake.log-analytics-sku)
                  insights_key_var_name: $(insights-key-var-name)
                  is_mooncake_stage: true
                  azure_client_id: $(AZURE_CLIENT_ID)
                  azure_client_secret: $(AZURE_CLIENT_SECRET)
                  azure_tenant_id: $(AZURE_TENANT_ID)
                  cosmos_regions_priority: $(mooncake.cosmos_regions_priority)
                  company_indexer_disabled: $(companyIndexerDisabled)
                  session_speaker_indexer_disabled: $(sessionSpeakerIndexerDisabled)
                  attendee_indexer_disabled: $(attendeeIndexerDisabled)
    - stage: release_prod_reciever
      displayName: Release PROD Attendee Indexer
      dependsOn: Build
      variables:
      - group: MyEventPlatform-Env-PROD
      jobs:
      - deployment: prep_deploy_prod_indexer
        displayName: Prepare RG for prod indexer
        environment: myevent-platform-prod
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureCLI@2
                name: ensure_rg
                displayName: Ensure Resource Group
                inputs:
                  azureSubscription: $(azure-subscription)
                  scriptType: 'bash'
                  scriptLocation: 'scriptPath'
                  scriptPath: '$(Pipeline.Workspace)/drop/scripts/az-ensure-empty-resourcegroup.sh'
                  arguments: '$(resource-group) "$(resource-group-location)"'
                  failOnStandardError: true
      - job: deploy_prod_indexer
        displayName: Deploy prod indexer
        dependsOn:
        - prep_deploy_prod_indexer
        condition: succeeded()
        strategy:
          matrix:
            westUs:
              location: 'West US'
              locationAbbr: westus
              searchName: $(events-shared-westus)
              searchKey: $(events-shared-westus-key)
            eastUs:
              location: 'East US'
              locationAbbr: eastus
              searchName: $(events-shared-eastus)
              searchKey: $(events-shared-eastus-key)
          maxParallel: 12
        steps:
        - checkout: none
        - template: /jobs/.azure-deploy-indexer-function-app.yml@self
          parameters:
            azure_subscription: $(azure-subscription)
            azure_tenant_subscription_id: $(azure-tenant-subscription-id)
            resource_group: $(resource-group)
            resource_group_location: $(resource-group-location)
            event_name: $(eventName)
            env: $(environment)
            servicebus_resource_group: $(service-bus-resource-group)
            servicebus_namespace: $(eventAttendeeServiceBusNamespace)
            servicebus_topic: $(eventAttendeeServiceBusTopic)
            servicebus_sessionchange_topic: $(eventSessionChangeTopic)
            servicebus_connection: $(AttendeeIndexingServiceBusConnection)
            site_name: $(site-name)
            program_index_prefix: $(ProgramIndexPrefix)
            index_prefix: $(IndexPrefix)
            city_name: $(CITY)
            region: $(location)
            session_speaker_queue: $(SessionSpeakerQueue)
            public_search_service_name: $(searchName)
            public_search_index_api_key: $(searchKey)
            db_settings_database_name: $(cosmosDBName)
            db_settings_store_name: $(DbSettingsStoreName)
            db_settings_timeout_in_seconds: $(DbSettingsTimeoutInSeconds)
            db_settings_file_name: $(defaultSettingsFile)
            is_using_test_data: false
            event_key_vault: '$(EVENT_KEY_VAULT)'
            devOpsOrg: $(devOpsOrg)
            devOpsProject: $(devOpsProject)
            varGroupId: $(varGroupId)
            region_abbr: $(locationAbbr)
            azure_cloud_service_connection: $(azure-service-connection)
            log_analytics_sku: $(log-analytics-sku)
            insights_key_var_name: $(insights-key-var-name)
            azure_client_id: $(AZURE_CLIENT_ID)
            azure_client_secret: $(AZURE_CLIENT_SECRET)
            azure_tenant_id: $(AZURE_TENANT_ID)
            cosmos_regions_priority: $(cosmos_regions_priority)
            company_indexer_disabled: $(companyIndexerDisabled)
            session_speaker_indexer_disabled: $(sessionSpeakerIndexerDisabled)
            attendee_indexer_disabled: $(attendeeIndexerDisabled)
      - deployment: deploy_indexer_alert
        dependsOn:
        - deploy_prod_indexer
        condition: succeeded()
        displayName: Deploy Indexer Alerts
        environment: myevent-platform-prod
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureCLI@2
                displayName: Deploy Bicep file
                env:
                  AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
                inputs:
                  azureSubscription: $(azure-subscription)
                  useGlobalConfig: true
                  addSpnToEnvironment: true
                  scriptType: pscore
                  scriptLocation: inlineScript
                  inlineScript: |
                    $ticks = (Get-Date).ticks
                    $deploymentGroupName = "$(resource-group)-$ticks"
                    az deployment group create `
                    --name $deploymentGroupName `
                    --template-file $(Pipeline.Workspace)/drop/templates/indexer-azure-alerts.bicep `
                    --resource-group $(resource-group) `
                    --parameters siteName=$(site-name) environment=$(environment) alertEmails=$(alertEmails)
    - stage: release_prod_reciever_mooncake
      displayName: MC_Release PROD Attendee Indexer
      dependsOn: Build
      variables:
      - group: MyEventPlatform-Env-PROD
      - name: AZURE_CLIENT_ID
        value: $(mc-sp-azure-client-id)
      - name: AZURE_CLIENT_SECRET
        value: $(mc-sp-azure-client-secret)
      - name: AZURE_TENANT_ID
        value: $(mc-sp-azure-TENANT-id)
      jobs:
      - deployment: prep_deploy_prod_indexer
        displayName: Prepare RG for prod indexer
        environment: myevent-platform-prod
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureCLI@2
                name: ensure_rg
                displayName: Ensure Resource Group
                inputs:
                  azureSubscription: $(mooncake.azure-subscription)
                  scriptType: 'bash'
                  scriptLocation: 'scriptPath'
                  scriptPath: '$(Pipeline.Workspace)/drop/scripts/az-ensure-empty-resourcegroup.sh'
                  arguments: '$(resource-group) "$(mooncake.resource-group-location)"'
                  failOnStandardError: true
      - job: deploy_prod_indexer
        displayName: Deploy prod indexer
        dependsOn:
        - prep_deploy_prod_indexer
        condition: succeeded()
        strategy:
          matrix:
            chinaEast2:
              location: 'China East 2'
              locationAbbr: chinaeast2
              searchName: $(events-shared-chinaeast2)
              searchKey: $(events-shared-chinaeast2-key)
          maxParallel: 12
        steps:
        - checkout: none
        - template: /jobs/.azure-deploy-indexer-function-app.yml@self
          parameters:
            azure_subscription: $(mooncake.azure-subscription)
            azure_subscription_global: $(azure-subscription)
            azure_tenant_subscription_id: $(mooncake.azure-tenant-subscription-id)
            resource_group: $(resource-group)
            resource_group_location: $(mooncake.resource-group-location)
            event_name: $(eventName)
            env: $(environment)
            servicebus_resource_group: $(service-bus-resource-group)
            servicebus_namespace: $(eventAttendeeServiceBusNamespace)
            servicebus_topic: $(eventAttendeeServiceBusTopic)
            servicebus_sessionchange_topic: $(eventSessionChangeTopic)
            servicebus_connection: $(AttendeeIndexingServiceBusConnection)
            site_name: $(site-name)
            program_index_prefix: $(ProgramIndexPrefix)
            index_prefix: $(IndexPrefix)
            city_name: $(CITY)
            region: $(location)
            session_speaker_queue: $(SessionSpeakerQueue)
            public_search_service_name: $(searchName)
            public_search_index_api_key: $(searchKey)
            db_settings_database_name: $(cosmosDBName)
            db_settings_store_name: $(DbSettingsStoreName)
            db_settings_timeout_in_seconds: $(DbSettingsTimeoutInSeconds)
            db_settings_file_name: $(defaultSettingsFile)
            is_using_test_data: false
            event_key_vault: '$(EVENT_KEY_VAULT)'
            devOpsOrg: $(devOpsOrg)
            devOpsProject: $(devOpsProject)
            varGroupId: $(varGroupId)
            region_abbr: $(locationAbbr)
            azure_cloud_service_connection: $(azure-service-connection)
            log_analytics_sku: $(mooncake.log-analytics-sku)
            insights_key_var_name: $(insights-key-var-name)
            is_mooncake_stage: true
            azure_client_id: $(AZURE_CLIENT_ID)
            azure_client_secret: $(AZURE_CLIENT_SECRET)
            azure_tenant_id: $(AZURE_TENANT_ID)
            cosmos_regions_priority: $(mooncake.cosmos_regions_priority)
            company_indexer_disabled: $(companyIndexerDisabled)
            session_speaker_indexer_disabled: $(sessionSpeakerIndexerDisabled)
            attendee_indexer_disabled: $(attendeeIndexerDisabled)
      - deployment: deploy_indexer_alert
        dependsOn:
        - deploy_prod_indexer
        condition: succeeded()
        displayName: Deploy Indexer Alerts
        environment: myevent-platform-prod
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureCLI@2
                displayName: Deploy Bicep file
                env:
                  AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
                inputs:
                  azureSubscription: $(mooncake.azure-subscription)
                  useGlobalConfig: true
                  addSpnToEnvironment: true
                  scriptType: pscore
                  scriptLocation: inlineScript
                  inlineScript: |
                    $ticks = (Get-Date).ticks
                    $deploymentGroupName = "$(resource-group)-$ticks"
                    az deployment group create `
                    --name $deploymentGroupName `
                    --template-file $(Pipeline.Workspace)/drop/templates/indexer-azure-alerts.bicep `
                    --resource-group $(resource-group) `
                    --parameters siteName=$(site-name) environment=$(environment) alertEmails=$(alertEmails)